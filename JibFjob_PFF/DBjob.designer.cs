#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JibFjob_PFF
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbjob")]
	public partial class DBjobDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertCandidat(Candidat instance);
    partial void UpdateCandidat(Candidat instance);
    partial void DeleteCandidat(Candidat instance);
    partial void InsertContrat(Contrat instance);
    partial void UpdateContrat(Contrat instance);
    partial void DeleteContrat(Contrat instance);
    partial void InsertDiplome(Diplome instance);
    partial void UpdateDiplome(Diplome instance);
    partial void DeleteDiplome(Diplome instance);
    partial void InsertDomaine(Domaine instance);
    partial void UpdateDomaine(Domaine instance);
    partial void DeleteDomaine(Domaine instance);
    partial void InsertEmploi(Emploi instance);
    partial void UpdateEmploi(Emploi instance);
    partial void DeleteEmploi(Emploi instance);
    partial void InsertEntreprise(Entreprise instance);
    partial void UpdateEntreprise(Entreprise instance);
    partial void DeleteEntreprise(Entreprise instance);
    partial void InsertNiveauEtude(NiveauEtude instance);
    partial void UpdateNiveauEtude(NiveauEtude instance);
    partial void DeleteNiveauEtude(NiveauEtude instance);
    partial void InsertProfession(Profession instance);
    partial void UpdateProfession(Profession instance);
    partial void DeleteProfession(Profession instance);
    partial void InsertRecrute(Recrute instance);
    partial void UpdateRecrute(Recrute instance);
    partial void DeleteRecrute(Recrute instance);
    #endregion
		
		public DBjobDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["dbjobConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBjobDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBjobDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBjobDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBjobDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Candidat> Candidat
		{
			get
			{
				return this.GetTable<Candidat>();
			}
		}
		
		public System.Data.Linq.Table<Contrat> Contrat
		{
			get
			{
				return this.GetTable<Contrat>();
			}
		}
		
		public System.Data.Linq.Table<Diplome> Diplome
		{
			get
			{
				return this.GetTable<Diplome>();
			}
		}
		
		public System.Data.Linq.Table<Domaine> Domaine
		{
			get
			{
				return this.GetTable<Domaine>();
			}
		}
		
		public System.Data.Linq.Table<Emploi> Emploi
		{
			get
			{
				return this.GetTable<Emploi>();
			}
		}
		
		public System.Data.Linq.Table<Entreprise> Entreprise
		{
			get
			{
				return this.GetTable<Entreprise>();
			}
		}
		
		public System.Data.Linq.Table<NiveauEtude> NiveauEtude
		{
			get
			{
				return this.GetTable<NiveauEtude>();
			}
		}
		
		public System.Data.Linq.Table<Profession> Profession
		{
			get
			{
				return this.GetTable<Profession>();
			}
		}
		
		public System.Data.Linq.Table<Recrute> Recrute
		{
			get
			{
				return this.GetTable<Recrute>();
			}
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Candidat")]
	public partial class Candidat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _candidatId;
		
		private string _nom;
		
		private string _prenom;
		
		private System.DateTime _dateNaissance;
		
		private string _genre;
		
		private string _ville;
		
		private int _tel;
		
		private int _Experience;
		
		private string _Photo;
		
		private string _cv;
		
		private string _lMotiv;
		
		private string _email;
		
		private string _mdp;
		
		private System.DateTime _derniereVisite;
		
		private System.Nullable<int> _NiveauEtude_IdNiveau;
		
		private System.Nullable<int> _IdProfession;
		
		private EntitySet<Recrute> _Recrute;
		
		private EntityRef<NiveauEtude> _NiveauEtude;
		
		private EntityRef<Profession> _Profession;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncandidatIdChanging(int value);
    partial void OncandidatIdChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void OndateNaissanceChanging(System.DateTime value);
    partial void OndateNaissanceChanged();
    partial void OngenreChanging(string value);
    partial void OngenreChanged();
    partial void OnvilleChanging(string value);
    partial void OnvilleChanged();
    partial void OntelChanging(int value);
    partial void OntelChanged();
    partial void OnExperienceChanging(int value);
    partial void OnExperienceChanged();
    partial void OnPhotoChanging(string value);
    partial void OnPhotoChanged();
    partial void OncvChanging(string value);
    partial void OncvChanged();
    partial void OnlMotivChanging(string value);
    partial void OnlMotivChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnmdpChanging(string value);
    partial void OnmdpChanged();
    partial void OnderniereVisiteChanging(System.DateTime value);
    partial void OnderniereVisiteChanged();
    partial void OnNiveauEtude_IdNiveauChanging(System.Nullable<int> value);
    partial void OnNiveauEtude_IdNiveauChanged();
    partial void OnIdProfessionChanging(System.Nullable<int> value);
    partial void OnIdProfessionChanged();
    #endregion
		
		public Candidat()
		{
			this._Recrute = new EntitySet<Recrute>(new Action<Recrute>(this.attach_Recrute), new Action<Recrute>(this.detach_Recrute));
			this._NiveauEtude = default(EntityRef<NiveauEtude>);
			this._Profession = default(EntityRef<Profession>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_candidatId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int candidatId
		{
			get
			{
				return this._candidatId;
			}
			set
			{
				if ((this._candidatId != value))
				{
					this.OncandidatIdChanging(value);
					this.SendPropertyChanging();
					this._candidatId = value;
					this.SendPropertyChanged("candidatId");
					this.OncandidatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="NVarChar(MAX)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="NVarChar(MAX)")]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateNaissance", DbType="DateTime NOT NULL")]
		public System.DateTime dateNaissance
		{
			get
			{
				return this._dateNaissance;
			}
			set
			{
				if ((this._dateNaissance != value))
				{
					this.OndateNaissanceChanging(value);
					this.SendPropertyChanging();
					this._dateNaissance = value;
					this.SendPropertyChanged("dateNaissance");
					this.OndateNaissanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genre", DbType="NVarChar(MAX)")]
		public string genre
		{
			get
			{
				return this._genre;
			}
			set
			{
				if ((this._genre != value))
				{
					this.OngenreChanging(value);
					this.SendPropertyChanging();
					this._genre = value;
					this.SendPropertyChanged("genre");
					this.OngenreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ville", DbType="NVarChar(MAX)")]
		public string ville
		{
			get
			{
				return this._ville;
			}
			set
			{
				if ((this._ville != value))
				{
					this.OnvilleChanging(value);
					this.SendPropertyChanging();
					this._ville = value;
					this.SendPropertyChanged("ville");
					this.OnvilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tel", DbType="Int NOT NULL")]
		public int tel
		{
			get
			{
				return this._tel;
			}
			set
			{
				if ((this._tel != value))
				{
					this.OntelChanging(value);
					this.SendPropertyChanging();
					this._tel = value;
					this.SendPropertyChanged("tel");
					this.OntelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Experience", DbType="Int NOT NULL")]
		public int Experience
		{
			get
			{
				return this._Experience;
			}
			set
			{
				if ((this._Experience != value))
				{
					this.OnExperienceChanging(value);
					this.SendPropertyChanging();
					this._Experience = value;
					this.SendPropertyChanged("Experience");
					this.OnExperienceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Photo", DbType="NVarChar(MAX)")]
		public string Photo
		{
			get
			{
				return this._Photo;
			}
			set
			{
				if ((this._Photo != value))
				{
					this.OnPhotoChanging(value);
					this.SendPropertyChanging();
					this._Photo = value;
					this.SendPropertyChanged("Photo");
					this.OnPhotoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cv", DbType="NVarChar(MAX)")]
		public string cv
		{
			get
			{
				return this._cv;
			}
			set
			{
				if ((this._cv != value))
				{
					this.OncvChanging(value);
					this.SendPropertyChanging();
					this._cv = value;
					this.SendPropertyChanged("cv");
					this.OncvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lMotiv", DbType="NVarChar(MAX)")]
		public string lMotiv
		{
			get
			{
				return this._lMotiv;
			}
			set
			{
				if ((this._lMotiv != value))
				{
					this.OnlMotivChanging(value);
					this.SendPropertyChanging();
					this._lMotiv = value;
					this.SendPropertyChanged("lMotiv");
					this.OnlMotivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mdp", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string mdp
		{
			get
			{
				return this._mdp;
			}
			set
			{
				if ((this._mdp != value))
				{
					this.OnmdpChanging(value);
					this.SendPropertyChanging();
					this._mdp = value;
					this.SendPropertyChanged("mdp");
					this.OnmdpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_derniereVisite", DbType="DateTime NOT NULL")]
		public System.DateTime derniereVisite
		{
			get
			{
				return this._derniereVisite;
			}
			set
			{
				if ((this._derniereVisite != value))
				{
					this.OnderniereVisiteChanging(value);
					this.SendPropertyChanging();
					this._derniereVisite = value;
					this.SendPropertyChanged("derniereVisite");
					this.OnderniereVisiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NiveauEtude_IdNiveau", DbType="Int")]
		public System.Nullable<int> NiveauEtude_IdNiveau
		{
			get
			{
				return this._NiveauEtude_IdNiveau;
			}
			set
			{
				if ((this._NiveauEtude_IdNiveau != value))
				{
					if (this._NiveauEtude.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNiveauEtude_IdNiveauChanging(value);
					this.SendPropertyChanging();
					this._NiveauEtude_IdNiveau = value;
					this.SendPropertyChanged("NiveauEtude_IdNiveau");
					this.OnNiveauEtude_IdNiveauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProfession", DbType="Int")]
		public System.Nullable<int> IdProfession
		{
			get
			{
				return this._IdProfession;
			}
			set
			{
				if ((this._IdProfession != value))
				{
					if (this._Profession.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdProfessionChanging(value);
					this.SendPropertyChanging();
					this._IdProfession = value;
					this.SendPropertyChanged("IdProfession");
					this.OnIdProfessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Candidat_Recrute", Storage="_Recrute", ThisKey="candidatId", OtherKey="Candidat_candidatId")]
		public EntitySet<Recrute> Recrute
		{
			get
			{
				return this._Recrute;
			}
			set
			{
				this._Recrute.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NiveauEtude_Candidat", Storage="_NiveauEtude", ThisKey="NiveauEtude_IdNiveau", OtherKey="IdNiveau", IsForeignKey=true)]
		public NiveauEtude NiveauEtude
		{
			get
			{
				return this._NiveauEtude.Entity;
			}
			set
			{
				NiveauEtude previousValue = this._NiveauEtude.Entity;
				if (((previousValue != value) 
							|| (this._NiveauEtude.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NiveauEtude.Entity = null;
						previousValue.Candidat.Remove(this);
					}
					this._NiveauEtude.Entity = value;
					if ((value != null))
					{
						value.Candidat.Add(this);
						this._NiveauEtude_IdNiveau = value.IdNiveau;
					}
					else
					{
						this._NiveauEtude_IdNiveau = default(Nullable<int>);
					}
					this.SendPropertyChanged("NiveauEtude");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profession_Candidat", Storage="_Profession", ThisKey="IdProfession", OtherKey="IdProfession", IsForeignKey=true)]
		public Profession Profession
		{
			get
			{
				return this._Profession.Entity;
			}
			set
			{
				Profession previousValue = this._Profession.Entity;
				if (((previousValue != value) 
							|| (this._Profession.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Profession.Entity = null;
						previousValue.Candidat.Remove(this);
					}
					this._Profession.Entity = value;
					if ((value != null))
					{
						value.Candidat.Add(this);
						this._IdProfession = value.IdProfession;
					}
					else
					{
						this._IdProfession = default(Nullable<int>);
					}
					this.SendPropertyChanged("Profession");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Recrute(Recrute entity)
		{
			this.SendPropertyChanging();
			entity.Candidat = this;
		}
		
		private void detach_Recrute(Recrute entity)
		{
			this.SendPropertyChanging();
			entity.Candidat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contrat")]
	public partial class Contrat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdContrat;
		
		private string _Designation;
		
		private EntitySet<Emploi> _Emploi;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdContratChanging(int value);
    partial void OnIdContratChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    #endregion
		
		public Contrat()
		{
			this._Emploi = new EntitySet<Emploi>(new Action<Emploi>(this.attach_Emploi), new Action<Emploi>(this.detach_Emploi));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdContrat", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdContrat
		{
			get
			{
				return this._IdContrat;
			}
			set
			{
				if ((this._IdContrat != value))
				{
					this.OnIdContratChanging(value);
					this.SendPropertyChanging();
					this._IdContrat = value;
					this.SendPropertyChanged("IdContrat");
					this.OnIdContratChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="NVarChar(MAX)")]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contrat_Emploi", Storage="_Emploi", ThisKey="IdContrat", OtherKey="IdContrat")]
		public EntitySet<Emploi> Emploi
		{
			get
			{
				return this._Emploi;
			}
			set
			{
				this._Emploi.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Emploi(Emploi entity)
		{
			this.SendPropertyChanging();
			entity.Contrat = this;
		}
		
		private void detach_Emploi(Emploi entity)
		{
			this.SendPropertyChanging();
			entity.Contrat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Diplome")]
	public partial class Diplome : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDiplome;
		
		private string _Designation;
		
		private int _IdNiveau;
		
		private EntityRef<NiveauEtude> _NiveauEtude;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDiplomeChanging(int value);
    partial void OnIdDiplomeChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    partial void OnIdNiveauChanging(int value);
    partial void OnIdNiveauChanged();
    #endregion
		
		public Diplome()
		{
			this._NiveauEtude = default(EntityRef<NiveauEtude>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDiplome", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDiplome
		{
			get
			{
				return this._IdDiplome;
			}
			set
			{
				if ((this._IdDiplome != value))
				{
					this.OnIdDiplomeChanging(value);
					this.SendPropertyChanging();
					this._IdDiplome = value;
					this.SendPropertyChanged("IdDiplome");
					this.OnIdDiplomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="NVarChar(MAX)")]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNiveau", DbType="Int NOT NULL")]
		public int IdNiveau
		{
			get
			{
				return this._IdNiveau;
			}
			set
			{
				if ((this._IdNiveau != value))
				{
					if (this._NiveauEtude.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdNiveauChanging(value);
					this.SendPropertyChanging();
					this._IdNiveau = value;
					this.SendPropertyChanged("IdNiveau");
					this.OnIdNiveauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NiveauEtude_Diplome", Storage="_NiveauEtude", ThisKey="IdNiveau", OtherKey="IdNiveau", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NiveauEtude NiveauEtude
		{
			get
			{
				return this._NiveauEtude.Entity;
			}
			set
			{
				NiveauEtude previousValue = this._NiveauEtude.Entity;
				if (((previousValue != value) 
							|| (this._NiveauEtude.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NiveauEtude.Entity = null;
						previousValue.Diplome.Remove(this);
					}
					this._NiveauEtude.Entity = value;
					if ((value != null))
					{
						value.Diplome.Add(this);
						this._IdNiveau = value.IdNiveau;
					}
					else
					{
						this._IdNiveau = default(int);
					}
					this.SendPropertyChanged("NiveauEtude");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Domaine")]
	public partial class Domaine : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDomaine;
		
		private string _Designation;
		
		private EntitySet<Profession> _Profession;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDomaineChanging(int value);
    partial void OnIdDomaineChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    #endregion
		
		public Domaine()
		{
			this._Profession = new EntitySet<Profession>(new Action<Profession>(this.attach_Profession), new Action<Profession>(this.detach_Profession));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDomaine", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDomaine
		{
			get
			{
				return this._IdDomaine;
			}
			set
			{
				if ((this._IdDomaine != value))
				{
					this.OnIdDomaineChanging(value);
					this.SendPropertyChanging();
					this._IdDomaine = value;
					this.SendPropertyChanged("IdDomaine");
					this.OnIdDomaineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="NVarChar(MAX)")]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Domaine_Profession", Storage="_Profession", ThisKey="IdDomaine", OtherKey="IdDomaine")]
		public EntitySet<Profession> Profession
		{
			get
			{
				return this._Profession;
			}
			set
			{
				this._Profession.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Profession(Profession entity)
		{
			this.SendPropertyChanging();
			entity.Domaine = this;
		}
		
		private void detach_Profession(Profession entity)
		{
			this.SendPropertyChanging();
			entity.Domaine = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Emploi")]
	public partial class Emploi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEmploi;
		
		private string _titre_Emploi;
		
		private string _descripion;
		
		private System.DateTime _dateCreation;
		
		private string _domain;
		
		private bool _EmploiEtat;
		
		private string _Ville;
		
		private int _nbPostes;
		
		private System.DateTime _dateEcheance;
		
		private int _IdContrat;
		
		private System.Nullable<double> _Salaire_propose;
		
		private int _idEntreprise;
		
		private EntitySet<Recrute> _Recrute;
		
		private EntityRef<Contrat> _Contrat;
		
		private EntityRef<Entreprise> _Entreprise;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEmploiChanging(int value);
    partial void OnidEmploiChanged();
    partial void Ontitre_EmploiChanging(string value);
    partial void Ontitre_EmploiChanged();
    partial void OndescripionChanging(string value);
    partial void OndescripionChanged();
    partial void OndateCreationChanging(System.DateTime value);
    partial void OndateCreationChanged();
    partial void OndomainChanging(string value);
    partial void OndomainChanged();
    partial void OnEmploiEtatChanging(bool value);
    partial void OnEmploiEtatChanged();
    partial void OnVilleChanging(string value);
    partial void OnVilleChanged();
    partial void OnnbPostesChanging(int value);
    partial void OnnbPostesChanged();
    partial void OndateEcheanceChanging(System.DateTime value);
    partial void OndateEcheanceChanged();
    partial void OnIdContratChanging(int value);
    partial void OnIdContratChanged();
    partial void OnSalaire_proposeChanging(System.Nullable<double> value);
    partial void OnSalaire_proposeChanged();
    partial void OnidEntrepriseChanging(int value);
    partial void OnidEntrepriseChanged();
    #endregion
		
		public Emploi()
		{
			this._Recrute = new EntitySet<Recrute>(new Action<Recrute>(this.attach_Recrute), new Action<Recrute>(this.detach_Recrute));
			this._Contrat = default(EntityRef<Contrat>);
			this._Entreprise = default(EntityRef<Entreprise>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEmploi", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idEmploi
		{
			get
			{
				return this._idEmploi;
			}
			set
			{
				if ((this._idEmploi != value))
				{
					this.OnidEmploiChanging(value);
					this.SendPropertyChanging();
					this._idEmploi = value;
					this.SendPropertyChanged("idEmploi");
					this.OnidEmploiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_titre_Emploi", DbType="NVarChar(MAX)")]
		public string titre_Emploi
		{
			get
			{
				return this._titre_Emploi;
			}
			set
			{
				if ((this._titre_Emploi != value))
				{
					this.Ontitre_EmploiChanging(value);
					this.SendPropertyChanging();
					this._titre_Emploi = value;
					this.SendPropertyChanged("titre_Emploi");
					this.Ontitre_EmploiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_descripion", DbType="NVarChar(MAX)")]
		public string descripion
		{
			get
			{
				return this._descripion;
			}
			set
			{
				if ((this._descripion != value))
				{
					this.OndescripionChanging(value);
					this.SendPropertyChanging();
					this._descripion = value;
					this.SendPropertyChanged("descripion");
					this.OndescripionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreation", DbType="DateTime NOT NULL")]
		public System.DateTime dateCreation
		{
			get
			{
				return this._dateCreation;
			}
			set
			{
				if ((this._dateCreation != value))
				{
					this.OndateCreationChanging(value);
					this.SendPropertyChanging();
					this._dateCreation = value;
					this.SendPropertyChanged("dateCreation");
					this.OndateCreationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_domain", DbType="NVarChar(MAX)")]
		public string domain
		{
			get
			{
				return this._domain;
			}
			set
			{
				if ((this._domain != value))
				{
					this.OndomainChanging(value);
					this.SendPropertyChanging();
					this._domain = value;
					this.SendPropertyChanged("domain");
					this.OndomainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmploiEtat", DbType="Bit NOT NULL")]
		public bool EmploiEtat
		{
			get
			{
				return this._EmploiEtat;
			}
			set
			{
				if ((this._EmploiEtat != value))
				{
					this.OnEmploiEtatChanging(value);
					this.SendPropertyChanging();
					this._EmploiEtat = value;
					this.SendPropertyChanged("EmploiEtat");
					this.OnEmploiEtatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ville", DbType="NVarChar(MAX)")]
		public string Ville
		{
			get
			{
				return this._Ville;
			}
			set
			{
				if ((this._Ville != value))
				{
					this.OnVilleChanging(value);
					this.SendPropertyChanging();
					this._Ville = value;
					this.SendPropertyChanged("Ville");
					this.OnVilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nbPostes", DbType="Int NOT NULL")]
		public int nbPostes
		{
			get
			{
				return this._nbPostes;
			}
			set
			{
				if ((this._nbPostes != value))
				{
					this.OnnbPostesChanging(value);
					this.SendPropertyChanging();
					this._nbPostes = value;
					this.SendPropertyChanged("nbPostes");
					this.OnnbPostesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateEcheance", DbType="DateTime NOT NULL")]
		public System.DateTime dateEcheance
		{
			get
			{
				return this._dateEcheance;
			}
			set
			{
				if ((this._dateEcheance != value))
				{
					this.OndateEcheanceChanging(value);
					this.SendPropertyChanging();
					this._dateEcheance = value;
					this.SendPropertyChanged("dateEcheance");
					this.OndateEcheanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdContrat", DbType="Int NOT NULL")]
		public int IdContrat
		{
			get
			{
				return this._IdContrat;
			}
			set
			{
				if ((this._IdContrat != value))
				{
					if (this._Contrat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdContratChanging(value);
					this.SendPropertyChanging();
					this._IdContrat = value;
					this.SendPropertyChanged("IdContrat");
					this.OnIdContratChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salaire_propose", DbType="Float")]
		public System.Nullable<double> Salaire_propose
		{
			get
			{
				return this._Salaire_propose;
			}
			set
			{
				if ((this._Salaire_propose != value))
				{
					this.OnSalaire_proposeChanging(value);
					this.SendPropertyChanging();
					this._Salaire_propose = value;
					this.SendPropertyChanged("Salaire_propose");
					this.OnSalaire_proposeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEntreprise", DbType="Int NOT NULL")]
		public int idEntreprise
		{
			get
			{
				return this._idEntreprise;
			}
			set
			{
				if ((this._idEntreprise != value))
				{
					if (this._Entreprise.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidEntrepriseChanging(value);
					this.SendPropertyChanging();
					this._idEntreprise = value;
					this.SendPropertyChanged("idEntreprise");
					this.OnidEntrepriseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Emploi_Recrute", Storage="_Recrute", ThisKey="idEmploi", OtherKey="Emploi_idEmploi")]
		public EntitySet<Recrute> Recrute
		{
			get
			{
				return this._Recrute;
			}
			set
			{
				this._Recrute.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contrat_Emploi", Storage="_Contrat", ThisKey="IdContrat", OtherKey="IdContrat", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Contrat Contrat
		{
			get
			{
				return this._Contrat.Entity;
			}
			set
			{
				Contrat previousValue = this._Contrat.Entity;
				if (((previousValue != value) 
							|| (this._Contrat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contrat.Entity = null;
						previousValue.Emploi.Remove(this);
					}
					this._Contrat.Entity = value;
					if ((value != null))
					{
						value.Emploi.Add(this);
						this._IdContrat = value.IdContrat;
					}
					else
					{
						this._IdContrat = default(int);
					}
					this.SendPropertyChanged("Contrat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entreprise_Emploi", Storage="_Entreprise", ThisKey="idEntreprise", OtherKey="idEntreprise", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Entreprise Entreprise
		{
			get
			{
				return this._Entreprise.Entity;
			}
			set
			{
				Entreprise previousValue = this._Entreprise.Entity;
				if (((previousValue != value) 
							|| (this._Entreprise.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Entreprise.Entity = null;
						previousValue.Emploi.Remove(this);
					}
					this._Entreprise.Entity = value;
					if ((value != null))
					{
						value.Emploi.Add(this);
						this._idEntreprise = value.idEntreprise;
					}
					else
					{
						this._idEntreprise = default(int);
					}
					this.SendPropertyChanged("Entreprise");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Recrute(Recrute entity)
		{
			this.SendPropertyChanging();
			entity.Emploi = this;
		}
		
		private void detach_Recrute(Recrute entity)
		{
			this.SendPropertyChanging();
			entity.Emploi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Entreprise")]
	public partial class Entreprise : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idEntreprise;
		
		private string _nom;
		
		private string _ville;
		
		private string _adresse;
		
		private System.DateTime _anneeCreation;
		
		private string _description;
		
		private string _email;
		
		private string _mdp;
		
		private System.DateTime _derniereVisite;
		
		private EntitySet<Emploi> _Emploi;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidEntrepriseChanging(int value);
    partial void OnidEntrepriseChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnvilleChanging(string value);
    partial void OnvilleChanged();
    partial void OnadresseChanging(string value);
    partial void OnadresseChanged();
    partial void OnanneeCreationChanging(System.DateTime value);
    partial void OnanneeCreationChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnmdpChanging(string value);
    partial void OnmdpChanged();
    partial void OnderniereVisiteChanging(System.DateTime value);
    partial void OnderniereVisiteChanged();
    #endregion
		
		public Entreprise()
		{
			this._Emploi = new EntitySet<Emploi>(new Action<Emploi>(this.attach_Emploi), new Action<Emploi>(this.detach_Emploi));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idEntreprise", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idEntreprise
		{
			get
			{
				return this._idEntreprise;
			}
			set
			{
				if ((this._idEntreprise != value))
				{
					this.OnidEntrepriseChanging(value);
					this.SendPropertyChanging();
					this._idEntreprise = value;
					this.SendPropertyChanged("idEntreprise");
					this.OnidEntrepriseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ville", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ville
		{
			get
			{
				return this._ville;
			}
			set
			{
				if ((this._ville != value))
				{
					this.OnvilleChanging(value);
					this.SendPropertyChanging();
					this._ville = value;
					this.SendPropertyChanged("ville");
					this.OnvilleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adresse", DbType="NVarChar(MAX)")]
		public string adresse
		{
			get
			{
				return this._adresse;
			}
			set
			{
				if ((this._adresse != value))
				{
					this.OnadresseChanging(value);
					this.SendPropertyChanging();
					this._adresse = value;
					this.SendPropertyChanged("adresse");
					this.OnadresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_anneeCreation", DbType="DateTime NOT NULL")]
		public System.DateTime anneeCreation
		{
			get
			{
				return this._anneeCreation;
			}
			set
			{
				if ((this._anneeCreation != value))
				{
					this.OnanneeCreationChanging(value);
					this.SendPropertyChanging();
					this._anneeCreation = value;
					this.SendPropertyChanged("anneeCreation");
					this.OnanneeCreationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mdp", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string mdp
		{
			get
			{
				return this._mdp;
			}
			set
			{
				if ((this._mdp != value))
				{
					this.OnmdpChanging(value);
					this.SendPropertyChanging();
					this._mdp = value;
					this.SendPropertyChanged("mdp");
					this.OnmdpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_derniereVisite", DbType="DateTime NOT NULL")]
		public System.DateTime derniereVisite
		{
			get
			{
				return this._derniereVisite;
			}
			set
			{
				if ((this._derniereVisite != value))
				{
					this.OnderniereVisiteChanging(value);
					this.SendPropertyChanging();
					this._derniereVisite = value;
					this.SendPropertyChanged("derniereVisite");
					this.OnderniereVisiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Entreprise_Emploi", Storage="_Emploi", ThisKey="idEntreprise", OtherKey="idEntreprise")]
		public EntitySet<Emploi> Emploi
		{
			get
			{
				return this._Emploi;
			}
			set
			{
				this._Emploi.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Emploi(Emploi entity)
		{
			this.SendPropertyChanging();
			entity.Entreprise = this;
		}
		
		private void detach_Emploi(Emploi entity)
		{
			this.SendPropertyChanging();
			entity.Entreprise = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NiveauEtude")]
	public partial class NiveauEtude : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdNiveau;
		
		private string _Designation;
		
		private EntitySet<Candidat> _Candidat;
		
		private EntitySet<Diplome> _Diplome;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNiveauChanging(int value);
    partial void OnIdNiveauChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    #endregion
		
		public NiveauEtude()
		{
			this._Candidat = new EntitySet<Candidat>(new Action<Candidat>(this.attach_Candidat), new Action<Candidat>(this.detach_Candidat));
			this._Diplome = new EntitySet<Diplome>(new Action<Diplome>(this.attach_Diplome), new Action<Diplome>(this.detach_Diplome));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNiveau", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdNiveau
		{
			get
			{
				return this._IdNiveau;
			}
			set
			{
				if ((this._IdNiveau != value))
				{
					this.OnIdNiveauChanging(value);
					this.SendPropertyChanging();
					this._IdNiveau = value;
					this.SendPropertyChanged("IdNiveau");
					this.OnIdNiveauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="NVarChar(MAX)")]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NiveauEtude_Candidat", Storage="_Candidat", ThisKey="IdNiveau", OtherKey="NiveauEtude_IdNiveau")]
		public EntitySet<Candidat> Candidat
		{
			get
			{
				return this._Candidat;
			}
			set
			{
				this._Candidat.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NiveauEtude_Diplome", Storage="_Diplome", ThisKey="IdNiveau", OtherKey="IdNiveau")]
		public EntitySet<Diplome> Diplome
		{
			get
			{
				return this._Diplome;
			}
			set
			{
				this._Diplome.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Candidat(Candidat entity)
		{
			this.SendPropertyChanging();
			entity.NiveauEtude = this;
		}
		
		private void detach_Candidat(Candidat entity)
		{
			this.SendPropertyChanging();
			entity.NiveauEtude = null;
		}
		
		private void attach_Diplome(Diplome entity)
		{
			this.SendPropertyChanging();
			entity.NiveauEtude = this;
		}
		
		private void detach_Diplome(Diplome entity)
		{
			this.SendPropertyChanging();
			entity.NiveauEtude = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Profession")]
	public partial class Profession : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdProfession;
		
		private string _Designation;
		
		private int _IdDomaine;
		
		private EntitySet<Candidat> _Candidat;
		
		private EntityRef<Domaine> _Domaine;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdProfessionChanging(int value);
    partial void OnIdProfessionChanged();
    partial void OnDesignationChanging(string value);
    partial void OnDesignationChanged();
    partial void OnIdDomaineChanging(int value);
    partial void OnIdDomaineChanged();
    #endregion
		
		public Profession()
		{
			this._Candidat = new EntitySet<Candidat>(new Action<Candidat>(this.attach_Candidat), new Action<Candidat>(this.detach_Candidat));
			this._Domaine = default(EntityRef<Domaine>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdProfession", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdProfession
		{
			get
			{
				return this._IdProfession;
			}
			set
			{
				if ((this._IdProfession != value))
				{
					this.OnIdProfessionChanging(value);
					this.SendPropertyChanging();
					this._IdProfession = value;
					this.SendPropertyChanged("IdProfession");
					this.OnIdProfessionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Designation", DbType="NVarChar(MAX)")]
		public string Designation
		{
			get
			{
				return this._Designation;
			}
			set
			{
				if ((this._Designation != value))
				{
					this.OnDesignationChanging(value);
					this.SendPropertyChanging();
					this._Designation = value;
					this.SendPropertyChanged("Designation");
					this.OnDesignationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDomaine", DbType="Int NOT NULL")]
		public int IdDomaine
		{
			get
			{
				return this._IdDomaine;
			}
			set
			{
				if ((this._IdDomaine != value))
				{
					if (this._Domaine.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDomaineChanging(value);
					this.SendPropertyChanging();
					this._IdDomaine = value;
					this.SendPropertyChanged("IdDomaine");
					this.OnIdDomaineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Profession_Candidat", Storage="_Candidat", ThisKey="IdProfession", OtherKey="IdProfession")]
		public EntitySet<Candidat> Candidat
		{
			get
			{
				return this._Candidat;
			}
			set
			{
				this._Candidat.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Domaine_Profession", Storage="_Domaine", ThisKey="IdDomaine", OtherKey="IdDomaine", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Domaine Domaine
		{
			get
			{
				return this._Domaine.Entity;
			}
			set
			{
				Domaine previousValue = this._Domaine.Entity;
				if (((previousValue != value) 
							|| (this._Domaine.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Domaine.Entity = null;
						previousValue.Profession.Remove(this);
					}
					this._Domaine.Entity = value;
					if ((value != null))
					{
						value.Profession.Add(this);
						this._IdDomaine = value.IdDomaine;
					}
					else
					{
						this._IdDomaine = default(int);
					}
					this.SendPropertyChanged("Domaine");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Candidat(Candidat entity)
		{
			this.SendPropertyChanging();
			entity.Profession = this;
		}
		
		private void detach_Candidat(Candidat entity)
		{
			this.SendPropertyChanging();
			entity.Profession = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Recrute")]
	public partial class Recrute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RecruteId;
		
		private System.DateTime _date;
		
		private int _Candidat_candidatId;
		
		private string _Categorie;
		
		private System.Nullable<int> _Emploi_idEmploi;
		
		private EntityRef<Candidat> _Candidat;
		
		private EntityRef<Emploi> _Emploi;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRecruteIdChanging(int value);
    partial void OnRecruteIdChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    partial void OnCandidat_candidatIdChanging(int value);
    partial void OnCandidat_candidatIdChanged();
    partial void OnCategorieChanging(string value);
    partial void OnCategorieChanged();
    partial void OnEmploi_idEmploiChanging(System.Nullable<int> value);
    partial void OnEmploi_idEmploiChanged();
    #endregion
		
		public Recrute()
		{
			this._Candidat = default(EntityRef<Candidat>);
			this._Emploi = default(EntityRef<Emploi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecruteId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RecruteId
		{
			get
			{
				return this._RecruteId;
			}
			set
			{
				if ((this._RecruteId != value))
				{
					this.OnRecruteIdChanging(value);
					this.SendPropertyChanging();
					this._RecruteId = value;
					this.SendPropertyChanged("RecruteId");
					this.OnRecruteIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
		public System.DateTime date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Candidat_candidatId", DbType="Int NOT NULL")]
		public int Candidat_candidatId
		{
			get
			{
				return this._Candidat_candidatId;
			}
			set
			{
				if ((this._Candidat_candidatId != value))
				{
					if (this._Candidat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCandidat_candidatIdChanging(value);
					this.SendPropertyChanging();
					this._Candidat_candidatId = value;
					this.SendPropertyChanged("Candidat_candidatId");
					this.OnCandidat_candidatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categorie", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Categorie
		{
			get
			{
				return this._Categorie;
			}
			set
			{
				if ((this._Categorie != value))
				{
					this.OnCategorieChanging(value);
					this.SendPropertyChanging();
					this._Categorie = value;
					this.SendPropertyChanged("Categorie");
					this.OnCategorieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emploi_idEmploi", DbType="Int")]
		public System.Nullable<int> Emploi_idEmploi
		{
			get
			{
				return this._Emploi_idEmploi;
			}
			set
			{
				if ((this._Emploi_idEmploi != value))
				{
					if (this._Emploi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmploi_idEmploiChanging(value);
					this.SendPropertyChanging();
					this._Emploi_idEmploi = value;
					this.SendPropertyChanged("Emploi_idEmploi");
					this.OnEmploi_idEmploiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Candidat_Recrute", Storage="_Candidat", ThisKey="Candidat_candidatId", OtherKey="candidatId", IsForeignKey=true)]
		public Candidat Candidat
		{
			get
			{
				return this._Candidat.Entity;
			}
			set
			{
				Candidat previousValue = this._Candidat.Entity;
				if (((previousValue != value) 
							|| (this._Candidat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Candidat.Entity = null;
						previousValue.Recrute.Remove(this);
					}
					this._Candidat.Entity = value;
					if ((value != null))
					{
						value.Recrute.Add(this);
						this._Candidat_candidatId = value.candidatId;
					}
					else
					{
						this._Candidat_candidatId = default(int);
					}
					this.SendPropertyChanged("Candidat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Emploi_Recrute", Storage="_Emploi", ThisKey="Emploi_idEmploi", OtherKey="idEmploi", IsForeignKey=true)]
		public Emploi Emploi
		{
			get
			{
				return this._Emploi.Entity;
			}
			set
			{
				Emploi previousValue = this._Emploi.Entity;
				if (((previousValue != value) 
							|| (this._Emploi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Emploi.Entity = null;
						previousValue.Recrute.Remove(this);
					}
					this._Emploi.Entity = value;
					if ((value != null))
					{
						value.Recrute.Add(this);
						this._Emploi_idEmploi = value.idEmploi;
					}
					else
					{
						this._Emploi_idEmploi = default(Nullable<int>);
					}
					this.SendPropertyChanged("Emploi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User
	{
		
		private int _ID_User;
		
		private string _Login;
		
		private string _Mot_Passe;
		
		private string _Type_User;
		
		public User()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_User", DbType="Int NOT NULL")]
		public int ID_User
		{
			get
			{
				return this._ID_User;
			}
			set
			{
				if ((this._ID_User != value))
				{
					this._ID_User = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Login
		{
			get
			{
				return this._Login;
			}
			set
			{
				if ((this._Login != value))
				{
					this._Login = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mot_Passe", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Mot_Passe
		{
			get
			{
				return this._Mot_Passe;
			}
			set
			{
				if ((this._Mot_Passe != value))
				{
					this._Mot_Passe = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type_User", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type_User
		{
			get
			{
				return this._Type_User;
			}
			set
			{
				if ((this._Type_User != value))
				{
					this._Type_User = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
